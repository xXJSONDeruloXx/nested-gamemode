#!/usr/bin/env bash
set -euo pipefail

default_gamescope_cmd=false
if [[ -z ${GAMESCOPE_CMD+x} || -z "${GAMESCOPE_CMD-}" ]]; then
    GAMESCOPE_CMD="gamescope -e --adaptive-sync --force-grab-cursor"
    # Add mangoapp if available
    if command -v mangoapp >/dev/null 2>&1; then
        GAMESCOPE_CMD+=" --mangoapp"
    fi
    default_gamescope_cmd=true
fi

if [[ "$default_gamescope_cmd" == true && "$GAMESCOPE_CMD" != *"--backend"* ]]; then
    if [[ -z ${WAYLAND_DISPLAY:-} && -n ${DISPLAY:-} ]]; then
        GAMESCOPE_CMD+=" --backend sdl"
    fi
fi

if [[ "${NESTED_DEBUG:-0}" == "1" ]]; then
    set -x
    LOG_DIR=${XDG_CACHE_HOME:-"$HOME/.cache"}
    LOG_FILE=${NESTED_DEBUG_LOG:-"$LOG_DIR/nested-gamemode.log"}
    mkdir -p "$LOG_DIR"
    exec > >(tee -a "$LOG_FILE") 2>&1
    echo "Nested Gamemode debug logging to $LOG_FILE"
fi

require_command() {
    if ! command -v "$1" >/dev/null 2>&1; then
        printf 'Error: Required command "%s" not found in PATH\n' "$1" >&2
        exit 1
    fi
}

require_command "gamescope"
require_command "yad"

STEAM_BIN=${STEAM_EXECUTABLE:-steam}
if ! command -v "$STEAM_BIN" >/dev/null 2>&1; then
    printf 'Error: Unable to locate Steam executable "%s". Set STEAM_EXECUTABLE if Steam is installed elsewhere.\n' "$STEAM_BIN" >&2
    exit 1
fi

default_args="-gamepadui -steamos3 -steampal -steampal"
steam_args_string=${STEAM_ARGS:-$default_args}
read -r -a steam_args <<< "$steam_args_string"

GAMEMODE_CONFIG=$(
    yad --title="Configure Gamemode" \
        --text="Please configure Nested Gamemode" \
        --image="steam" \
        --button="Launch Gamemode" \
        --form --separator="," \
        --field="Max FPS in frame limiter: ":NUM "60" \
        --field="Window width:":NUM 1280 \
        --field="Window height:":NUM 800 \
        --field="Enable HDR (hardware must support it)":CHK \
        --field="":LBL \
        --field="THIS IS NOT THE INTENDED WAY TO USE STEAM GAMEMODE.
* Steam will be restarted once configuration is done.
* Some features may not work properly in this mode.
* You will have to re-enable bluetooth once Nested Gamemode has started.
* Enable Force Composite in the Steam Gamemode developer settings to fix graphical issues.
* Steam has to be closed through the tray icon to exit.":LBL
) || true

if [[ -z "${GAMEMODE_CONFIG:-}" ]]; then
    echo "Nested Gamemode launch canceled."
    exit 0
fi

IFS=, read -r MAX_FPS GAMEMODE_WIDTH GAMEMODE_HEIGHT GAMEMODE_HDR <<< "$GAMEMODE_CONFIG"

GAMEMODE_WIDTH=${GAMEMODE_WIDTH:-1280}
GAMEMODE_HEIGHT=${GAMEMODE_HEIGHT:-720}
MAX_FPS=${MAX_FPS:-0}

if [[ -n "$MAX_FPS" && "$MAX_FPS" != "0" ]]; then
    GAMESCOPE_CMD+=" -r $MAX_FPS"
fi
if [[ "$GAMEMODE_HDR" == "TRUE" ]]; then
    GAMESCOPE_CMD+=" --hdr-enabled"
fi

if pgrep -x steam >/dev/null 2>&1; then
    echo "Steam detected running. Attempting clean shutdown..."
    "$STEAM_BIN" steam://quit >/dev/null 2>&1 || "$STEAM_BIN" +quit >/dev/null 2>&1 || true
    
    # Wait briefly for clean shutdown
    sleep 2
    
    # If Steam is still running, force kill it
    if pgrep -x steam >/dev/null 2>&1; then
        echo "Steam did not exit cleanly. Force killing Steam processes..."
        pkill -TERM steam 2>/dev/null || true
        sleep 1
        
        # If still running, use SIGKILL
        if pgrep -x steam >/dev/null 2>&1; then
            echo "Using SIGKILL to terminate Steam..."
            pkill -KILL steam 2>/dev/null || true
            sleep 1
        fi
    fi
    
    if pgrep -x steam >/dev/null 2>&1; then
        echo "Warning: Steam processes may still be running."
    else
        echo "Steam successfully terminated."
    fi
fi

if [[ -z "${XDG_RUNTIME_DIR:-}" ]]; then
    echo "Error: XDG_RUNTIME_DIR is not set; cannot create gamescope sockets." >&2
    exit 1
fi

tmpdir=$(mktemp -p "$XDG_RUNTIME_DIR" -d -t gamescope.XXXXXXX)
cleanup() {
    if [[ -n "${tmpdir:-}" && -d "$tmpdir" ]]; then
        rm -rf "$tmpdir"
    fi
}
trap cleanup EXIT

stats="$tmpdir/stats.pipe"
export GAMESCOPE_STATS="$stats"
mkfifo -- "$stats"

attempt=1
max_attempts=2
exit_code=0
while (( attempt <= max_attempts )); do
    echo "Launching gamescope with: $GAMESCOPE_CMD -w $GAMEMODE_WIDTH -h $GAMEMODE_HEIGHT -W $GAMEMODE_WIDTH -H $GAMEMODE_HEIGHT -- $STEAM_BIN ${steam_args[*]}"

    set +e
    $GAMESCOPE_CMD \
        -w "$GAMEMODE_WIDTH" -h "$GAMEMODE_HEIGHT" \
        -W "$GAMEMODE_WIDTH" -H "$GAMEMODE_HEIGHT" \
        -- "$STEAM_BIN" "${steam_args[@]}"
    exit_code=$?
    set -e

    if [[ $exit_code -eq 0 ]]; then
        break
    fi

    if [[ "$default_gamescope_cmd" == true && "$GAMESCOPE_CMD" != *"--backend sdl"* && -n ${DISPLAY:-} ]]; then
        echo "Gamescope exited with code $exit_code. Retrying with --backend sdl."
        GAMESCOPE_CMD+=" --backend sdl"
        ((attempt++))
        continue
    fi

    break
done

if [[ $exit_code -ne 0 ]]; then
    echo "Nested Gamemode exited with error code $exit_code" >&2
else
    echo "Nested Gamemode exited cleanly."
fi

exit $exit_code
